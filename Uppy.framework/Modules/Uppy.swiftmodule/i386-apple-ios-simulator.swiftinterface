// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.1 (swiftlang-1200.0.41 clang-1200.0.32.8)
// swift-module-flags: -target i386-apple-ios9.3-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Uppy
import Foundation
import Swift
import UIKit
@_exported import Uppy
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class Uppy : ObjectiveC.NSObject {
  @objc public static let shared: Uppy.Uppy
  @objc deinit
}
extension Uppy {
  @objc dynamic public func initialize(applicationID: Swift.String, with baseUrl: Swift.String, and mode: Uppy.SDKMode = .native)
  @objc dynamic public func getUpdate(with completionHandler: ((Swift.String, Swift.Bool) -> Swift.Void)?)
  @objc dynamic public func setLogLevel(_ logLevel: Uppy.LogLevel)
}
@objc public enum LogLevel : Swift.Int {
  case none = 0
  case error = 1
  case info = 2
  case debug = 3
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum SDKMode : Swift.Int {
  case native
  case custom
  public typealias RawValue = Swift.Int
  public init?(rawValue: Swift.Int)
  public var rawValue: Swift.Int {
    get
  }
}
extension UIColor {
  convenience public init(hex: Swift.UInt32, alpha: CoreGraphics.CGFloat = 1)
}
public func localize(_ key: Swift.String) -> Swift.String
extension Uppy.LogLevel : Swift.Equatable {}
extension Uppy.LogLevel : Swift.Hashable {}
extension Uppy.LogLevel : Swift.RawRepresentable {}
extension Uppy.SDKMode : Swift.Equatable {}
extension Uppy.SDKMode : Swift.Hashable {}
extension Uppy.SDKMode : Swift.RawRepresentable {}
